---
- hosts: '{{ hosts }}'
#  roles:
#  - common
  sudo: yes

  tasks:
  - name: run a general yum update
    yum: 
        name: '*'
        state: latest

  - name: permanent disable SELinux
    shell: sed -i s/SELINUX=enforcing/SELINUX=disabled/ /etc/selinux/config
    ignore_errors: yes

  - name: temporary disable selinux
    shell: /sbin/setenforce 0
    ignore_errors: yes

  - name: install dependency packages... openjkd, httpd, pycairo, django, mod_wsgi, 
    yum: name={{ item }}
    with_items:
       - java-1.8.0-openjdk 
       - httpd.x86_64 
       - pycairo.x86_64  
       - pycairo-devel.x86_64  
       - python-django-tagging 
       - python-twisted-core.x86_64
       - pytz 
       - mod_wsgi.x86_64
       - gcc.x86_64
       - MySQL-python

  - name: download get-pip 
    get_url: 
        url: https://bootstrap.pypa.io/get-pip.py
        dest: /var/tmp/ 
        mode: 0755 
        validate_certs: no

  - name: run get-pip.py to install pip
    shell: /usr/bin/python /var/tmp/get-pip.py 

  - name: pip install carbon
    shell: pip install carbon --install-option="--prefix=/opt/graphite" 
    #shell: pip install carbon --install-option="--prefix=/opt/graphite" --install-option="--install-lib=/usr/lib/python2.7/site-packages"

  - name: pip install whisper
    shell: pip install whisper --install-option="--prefix=/opt/graphite" 
    #shell: pip install whisper --install-option="--prefix=/opt/graphite" --install-option="--install-lib=/usr/lib/python2.7/site-packages"

  - name: pip install graphite-web
    shell: pip install graphite-web --install-option="--prefix=/opt/graphite" 
    #shell: pip install graphite-web --install-option="--prefix=/opt/graphite" --install-option="--install-lib=/usr/lib/python2.7/site-packages"

  # Only if NOT using the --install-lib option above
  - name: Add graphite python site-packages directory to python path (mkdir for lib.pth file) (/root/.local/lib/python2.7/site-packages/)
    file:
        path: /root/.local/lib/python2.7/site-packages/
        state: directory
        mode: 0755
        owner: root
        group: root

  # Only if NOT using the --install-lib option above
  - name: make lib.pth file which contains the python path
    shell: echo /opt/graphite/lib/python2.7/site-packages/ > /root/.local/lib/python2.7/site-packages/lib.pth

  - name: add carbon user
    shell: useradd -r -d /opt/graphite/storage/whisper -s /sbin/nologin -c "Carbon cache daemon" -u498 carbon
    ignore_errors: yes

  # Destination of local_settings depends on where the intall-lib directory is... /opt/graphite/webapp/ or /usr/lib/python2.7/site-packages
  - name: copy /opt/graphite/webapp/graphite/local_settings.py
    copy: 
        src: ./files/graphite-9.15/webapp_graphite_local_settings.py 
        dest: /opt/graphite/webapp/graphite/local_settings.py  
        # dest: /usr/lib/python2.7/site-packages/graphite/local_settings.py
        mode: 0644
        group: apache
        owner: apache

  - name: set permissions
    file:
        path: /opt/graphite/storage/whisper
        owner: carbon
        group: carbon
    #shell: chown -R carbon:carbon /opt/graphite/storage/whisper

  - name: set permissions on webapp dir
    file:
        path: /opt/graphite/storage/log/webapp/
        owner: apache
        group: apache
    #shell: chown -R apache:apache /opt/graphite/storage/log/webapp/

  #
  # Begin MySQL installation
  ############################

  - name: mysql - download the mysql yum repository ...  mysql57-community-release-el7.7
    get_url: 
        dest: /var/tmp/ 
        url: http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm validate_certs=no

  - name: mysql -  install mysql yum repository that was just downloaded
    #shell: yum localinstall mysql57-community-release-el7-7.noarch.rpm
    shell: rpm -Uvhl mysql57-community-release-el7-7.noarch.rpm chdir=/var/tmp/

  - name: mysql - install mysql-community via yum
    yum: 
        name: mysql-community-server-5.7.10-1.el7.x86_64
        state: latest
    #shell: sudo yum localinstall mysql57-community-release-el7-{version-number}.noarch.rpm

  - name: mysql - start mysqld service
    service: 
        name: mysqld
        enabled: yes
        state: started
    #shell: systemctl start mysqld.service

  - name: mysql - get temp password
    shell: grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}'
    register: mysql_pw

  - name: mysql - Set root user password
    shell: mysql -u root -p'{{ mysql_pw.stdout }}' --connect-expired-password -e "ALTER USER 'root'@'localhost' IDENTIFIED BY 'P@ssw0rd'";
    ignore_errors: yes

  - name: mysql - remove anonymous user
    shell: mysql -u root -pP@ssw0rd -e "DROP USER ''@'localhost';"
    ignore_errors: yes

  - name: mysql - disallow root login remotely
    shell: mysql -u root -pP@ssw0rd -e "DELETE FROM mysql.user WHERE User='root' AND Host!='localhost';"
    ignore_errors: yes

  - name: mysql - reload privilege table
    shell: mysql -uroot -pP@ssw0rd  -e "FLUSH PRIVILEGES;"
    ignore_errors: yes

  - name: mysql - graphite db - copy file used in next step to create graphite db and user
    copy: 
        src: ./files/graphite-9.15/mysql_create_graphite_db.in
        dest: /tmp/mysql_create_graphite_db.in
    #copy: src=./files/graphite-9.15/mysql_create_graphite_db.in dest=/tmp/mysql_create_graphite_db.in

  - name: mysql - graphite db -  create graphite db & user
    shell: mysql -pP@ssw0rd < /tmp/mysql_create_graphite_db.in

  - name: mysql - graphite db - create tables with syncdb
    shell: PYTHONPATH=/opt/graphite/webapp /usr/lib/python2.7/site-packages/django/bin/django-admin.py syncdb --settings=graphite.settings  --noinput

  - name: graphite - copy carbon.conf
    copy: 
        src: ./files/graphite-9.15/carbon.conf
        dest: /opt/graphite/conf/carbon.conf
    #copy: src=./files/graphite-9.15/carbon.conf dest=/opt/graphite/conf/carbon.conf

  - name: copy /opt/graphite/conf/storage-schemas.conf
    copy: 
        src: ./files/graphite-9.15/storage-schemas.conf
        dest: /opt/graphite/conf/storage-schemas.conf

  - name: copy /opt/graphite/conf/graphite.wsgi
    copy: 
        src: ./files/graphite-9.15/graphite.wsgi
        dest: /opt/graphite/conf/graphite.wsgi
        mode: 0755

  - name: chown log/webapp
    file:
        path: /opt/graphite/storage/log/webapp/
        owner: apache
        group: apache
    #shell: chown -R apache:apache /opt/graphite/storage/log/webapp/

  - name: chown /opt/graphite/storage
    file:
        path: /opt/graphite/storage/
        owner: apache
        group: apache
    #shell: chown apache:apache /opt/graphite/storage/

  # /opt/graphite/conf/storage-aggregation.conf.example
  # move it to /opt/graphite/conf/storage-aggregation.conf
  - name: move example file to storage-aggregation.conf
    shell: cp -p /opt/graphite/conf/storage-aggregation.conf.example /opt/graphite/conf/storage-aggregation.conf

  # may have to remove or move /usr/lib64/python2.7/site-packages/twisted/
  - name: start carbon daemon
    shell: /opt/graphite/bin/carbon-cache.py start

  # /opt/graphite/lib/python2.7/site-packages/
  - name: move whisper 
    shell: cp -pR /opt/graphite/lib/python2.7/site-packages/* /usr/lib/python2.7/site-packages/

  #
  # Carbon complete..  move to Apache
  ############ 

  - name: chown apache opt/graphite/storage/log/webapp/
    file:
        path: /opt/graphite/storage/log/webapp/
        owner: apache
        group: apache
    #shell: chown -R apache:apache /opt/graphite/storage/log/webapp/

  - name: chown apache /opt/graphite/storage
    file:
        path: /opt/graphite/storage/
        owner: apache
        group: apache
    #shell: chown apache:apache /opt/graphite/storage/

  #- name: copy http.conf
  #  copy: src=./files/graphite-9.15/httpd.conf dest=/etc/httpd/conf/httpd.conf

  - name: copy graphite http conf
    copy: 
        src: ./files/graphite-9.15/01_graphite.conf
        dest: /etc/httpd/conf.d/01_graphite.conf
    #copy: src=./files/graphite-9.15/01_graphite.conf dest=/etc/httpd/conf.d/01_graphite.conf

  - name: modify 01_graphite.conf to have correct ip in /grafana redirect
    shell: sed -i s/127.0.0.1/{{ ansible_eth0.ipv4.address }}/ /etc/httpd/conf.d/01_graphite.conf

  - name: start apache
    shell: /sbin/apachectl start

  #- name: start Apache
  #  shell: /etc/init.d/httpd start

  #
  # Apache base & carbon complete..  move to grafana
  ########## 

  - name: install grafana via yum directly over https
    shell: yum -y install https://grafanarel.s3.amazonaws.com/builds/grafana-2.6.0-1.x86_64.rpm

  - name: copy grafana.ini to /etc/grafana/grafana.ini
    copy: 
        src: ./files/graphite-9.15/grafana.ini
        dest: /etc/grafana/grafana.ini
        owner: root
        group: grafana
        mode: 0640

  - name: start the grafana server via systemctl
    service: 
        name: grafana-server
        state: started
    #shell: systemctl start grafana-server

  #- name: enable grafana to run at boot
  #  shell: systemctl enable grafana-server.service